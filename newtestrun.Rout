
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.3     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.3     ✔ tibble    3.2.1
✔ lubridate 1.9.3     ✔ tidyr     1.3.0
✔ purrr     1.0.2     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(tidymodels)
── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──
✔ broom        1.0.5     ✔ rsample      1.2.0
✔ dials        1.2.0     ✔ tune         1.1.2
✔ infer        1.0.5     ✔ workflows    1.1.3
✔ modeldata    1.2.0     ✔ workflowsets 1.0.1
✔ parsnip      1.1.1     ✔ yardstick    1.2.0
✔ recipes      1.0.8     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ scales::discard() masks purrr::discard()
✖ dplyr::filter()   masks stats::filter()
✖ recipes::fixed()  masks stringr::fixed()
✖ dplyr::lag()      masks stats::lag()
✖ yardstick::spec() masks readr::spec()
✖ recipes::step()   masks stats::step()
• Dig deeper into tidy modeling with R at https://www.tmwr.org
> library(vroom)

Attaching package: ‘vroom’

The following object is masked from ‘package:yardstick’:

    spec

The following object is masked from ‘package:scales’:

    col_factor

The following objects are masked from ‘package:readr’:

    as.col_spec, col_character, col_date, col_datetime, col_double,
    col_factor, col_guess, col_integer, col_logical, col_number,
    col_skip, col_time, cols, cols_condense, cols_only, date_names,
    date_names_lang, date_names_langs, default_locale, fwf_cols,
    fwf_empty, fwf_positions, fwf_widths, locale, output_column,
    problems, spec

> library(embed)
> library(themis) 
> 
> amazontrain <- vroom("./train.csv")
Rows: 32769 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): ACTION, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTN...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> amazontest <- vroom("./test.csv")
Rows: 58921 Columns: 10
── Column specification ────────────────────────────────────────────────────────
Delimiter: ","
dbl (10): id, RESOURCE, MGR_ID, ROLE_ROLLUP_1, ROLE_ROLLUP_2, ROLE_DEPTNAME,...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> amazontrain <- amazontrain %>%
+   mutate(ACTION = as.factor(ACTION))
> 
> #########################################################
> #Categorical Random Forest
> ###########################################################
> my_recipe_new <- recipe(ACTION ~ ., data=amazontrain) %>%
+   step_mutate_at(all_numeric_predictors(), fn = factor) %>%
+   #step_other(all_nominal_predictors(), threshold = .001) %>%
+   step_lencode_mixed(all_nominal_predictors(), outcome = vars(ACTION)) %>%
+   step_normalize(all_numeric_predictors()) %>%
+   #step_pca(all_predictors(), threshold = .8) %>%
+   step_smote(all_outcomes(), neighbors=5)
> 
> my_mod_RF <- rand_forest(mtry = tune(), min_n = tune(), trees = 500) %>%
+   set_engine("ranger") %>%
+   set_mode("classification")
> 
> amazon_workflow_RF <- workflow() %>%
+   add_recipe(my_recipe_new) %>%
+   add_model(my_mod_RF)
> 
> ## Grid of values to tune over
> tuning_grid <- grid_regular(mtry(range = c(1,10)),
+                             min_n(range = c(20, 40)),
+                             levels = 5) ## L^2 total tuning possibilities
> 
> ## Split data for CV15
> folds <- vfold_cv(amazontrain, v = 5, repeats=1)
> 
> ## Run the CV
> CV_results <- amazon_workflow_RF %>%
+   tune_grid(resamples=folds,
+             grid=tuning_grid,
+             metrics=metric_set(roc_auc)) #Or leave metrics NULL
→ A | warning: 10 columns were requested but there were 9 predictors in the data. 9 will be used.
There were issues with some computations   A: x1
There were issues with some computations   A: x2
There were issues with some computations   A: x3
There were issues with some computations   A: x4
There were issues with some computations   A: x5
→ B | warning: Model failed to converge with max|grad| = 0.398809 (tol = 0.002, component 1), Model is nearly unidentifiable: very large eigenvalue
                - Rescale variables?
There were issues with some computations   A: x5There were issues with some computations   A: x5   B: x1
There were issues with some computations   A: x6   B: x1
There were issues with some computations   A: x7   B: x1
There were issues with some computations   A: x8   B: x1
There were issues with some computations   A: x9   B: x1
There were issues with some computations   A: x10   B: x1
There were issues with some computations   A: x11   B: x1
There were issues with some computations   A: x12   B: x1
There were issues with some computations   A: x13   B: x1
There were issues with some computations   A: x14   B: x1
There were issues with some computations   A: x15   B: x1
→ C | warning: Model failed to converge with max|grad| = 0.322774 (tol = 0.002, component 1), Model is nearly unidentifiable: very large eigenvalue
                - Rescale variables?
There were issues with some computations   A: x15   B: x1There were issues with some computations   A: x15   B: x1   C: x1
There were issues with some computations   A: x16   B: x1   C: x1
There were issues with some computations   A: x17   B: x1   C: x1
There were issues with some computations   A: x18   B: x1   C: x1
There were issues with some computations   A: x19   B: x1   C: x1
There were issues with some computations   A: x20   B: x1   C: x1
There were issues with some computations   A: x21   B: x1   C: x1
There were issues with some computations   A: x22   B: x1   C: x1
There were issues with some computations   A: x23   B: x1   C: x1
There were issues with some computations   A: x24   B: x1   C: x1
There were issues with some computations   A: x25   B: x1   C: x1
There were issues with some computations   A: x25   B: x1   C: x1

> 
> #Find the best tuning parameters
> bestTune <- CV_results %>%
+   select_best('roc_auc')
> 
> final_wf <- amazon_workflow_RF %>%
+   finalize_workflow(bestTune) %>%
+   fit(data=amazontrain)
> 
> amazon_predictions_RF <- final_wf %>% predict(new_data = amazontest, type="prob")
> 
> submission <- amazon_predictions_RF %>%
+   mutate(id = amazontest$id) %>%
+   mutate(Action = .pred_1) %>%
+   select(3, 4)
> 
> vroom_write(submission, "amazonrf.csv", delim = ",")
> 
> proc.time()
    user   system  elapsed 
5956.982   47.905 5694.242 
